# .github/workflows/build-and-deploy.yml
name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Generate docker-compose.yml
        run: |
          cat > docker-compose.yml << 'EOF'
          version: '3.8'

          services:
            mongodb:
              image: mongo:6.0
              volumes:
                - mongodb_data:/data/db
              environment:
                - MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_USER }}
                - MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_PASSWORD }}
                - MONGO_INITDB_DATABASE=telegram_support_bot
              networks:
                - bot_network
              restart: always
              healthcheck:
                test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASSWORD }}@localhost:27017/telegram_support_bot?authSource=admin --quiet
                interval: 10s
                timeout: 5s
                retries: 5
                start_period: 30s

            app:
              image: ghcr.io/${{ github.repository }}:latest
              environment:
                - NODE_ENV=production
                - MONGODB_URI=mongodb://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASSWORD }}@mongodb:27017/telegram_support_bot?authSource=admin
                - BOT_TOKEN=${{ secrets.BOT_TOKEN }}
                - PORT=3000
                - SUPPORT_CHANNEL_ID=${{ secrets.SUPPORT_CHANNEL_ID }}
                - ADMIN_USER_IDS=${{ secrets.ADMIN_USER_IDS }}
              depends_on:
                mongodb:
                  condition: service_healthy
              networks:
                - bot_network
              restart: always

            setup:
              image: ghcr.io/${{ github.repository }}:latest
              environment:
                - MONGODB_URI=mongodb://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASSWORD }}@mongodb:27017/telegram_support_bot?authSource=admin
                - ADMIN_USER_IDS=${{ secrets.ADMIN_USER_IDS }}
              depends_on:
                mongodb:
                  condition: service_healthy
              command: node setup-staff.js
              networks:
                - bot_network
              restart: on-failure

          volumes:
            mongodb_data:
              name: telegram_support_bot_data

          networks:
            bot_network:
              driver: bridge
          EOF

      - name: Upload docker-compose.yml as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: docker-compose.yml
