services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=telegram_support_bot
    networks:
      - bot_network
    # Remove user mapping as it's causing permission issues
    command: mongod --wiredTigerCacheSizeGB 0.5 --bind_ip_all
    restart: always
    healthcheck:
      test: mongosh --quiet mongodb://admin:password@localhost:27017/telegram_support_bot?authSource=admin --eval 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Node.js Application for the Bot
  app:
    image: ghcr.io/mrgarbonzo/supportticket:latest
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/telegram_support_bot?authSource=admin
      - BOT_TOKEN=7908372655:AAGLZyafh5cO7GuX_77eeaKCwQiw8ImNG7I
      - PORT=3000
      - SUPPORT_CHANNEL_ID=-1002682721948
      - ADMIN_USER_IDS=587534846
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - bot_network
    restart: always
    ports:
      - "3000:3000"

  # Service to set up initial admin users
  setup:
    image: ghcr.io/mrgarbonzo/supportticket:latest
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/telegram_support_bot?authSource=admin
      - ADMIN_USER_IDS=587534846
    depends_on:
      mongodb:
        condition: service_healthy
    command: node setup-staff.js
    networks:
      - bot_network
    restart: on-failure

volumes:
  mongodb_data:
    driver: local

networks:
  bot_network:
    driver: bridge
